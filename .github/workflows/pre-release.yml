name: Pre-Release

on:
  push:
    branches:
      - dev

permissions:
  contents: write
  pull-requests: write
  packages: read

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup .npmrc for GitHub Packages
        run: |
          echo "@colisys:registry=https://npm.pkg.github.com/colisys" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc
          echo "//npm.pkg.github.com/:always-auth=true" >> .npmrc

      - name: Install dependencies
        run: pnpm install

      - name: Build all packages
        run: pnpm dist:all

      - name: Organize artifacts by package
        run: |
          mkdir -p artifacts
          for dir in packages/*/; do
            pkg_name=$(basename "$dir")
            if [ -d "${dir}dist" ]; then
              mkdir -p "artifacts/${pkg_name}"
              cp -r "${dir}dist/" "artifacts/${pkg_name}/"
            fi
          done
          tar -czvf blink-the-ui-artifacts.tar.gz -C artifacts .

      - name: Get version from package.json
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        with:
          path: .

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "blink-the-ui-artifacts.tar.gz"
          tag: v${{ steps.package-version.outputs.current-version}}
          name: Release v${{ steps.package-version.outputs.current-version}}
          draft: false
          prerelease: true
          allowUpdates: true
          removeArtifacts: true